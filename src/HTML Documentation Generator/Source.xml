<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bot Client</name>
    </assembly>
    <members>
        <member name="T:PBot.Bot">
            <summary>
            Contains methods for initializing and preparing the bot's client.
            </summary>
        </member>
        <member name="F:PBot.Bot.Secrets">
            <summary>
            Allows the fetching of private data from user secrets.
            </summary>
        </member>
        <member name="F:PBot.Bot.Client">
            <summary>
            P.BOT's main client.
            </summary>
        </member>
        <member name="F:PBot.Bot.ClientH">
            <summary>
            P.BOT's HTTP client, used for external network requests.
            </summary>
        </member>
        <member name="F:PBot.Bot.GuildID">
            <summary>
            The current guild's ID, fetched via <see cref="M:PBot.Bot.GetSecret(System.String)"/>.
            </summary>
        </member>
        <member name="F:PBot.Bot.GuildURL">
            <summary>
            The base guild URL.
            </summary>
        </member>
        <member name="M:PBot.Bot.GetSecret(System.String)">
            <summary>
            Extracts a value from the project secrets, returning null if the identifier does not exist.
            </summary>
        </member>
        <member name="M:PBot.Bot.Restart">
            <summary>
            Stops the client, releases its resources, and restarts the bot client.
            </summary>
        </member>
        <member name="M:PBot.Bot.Start">
            <summary>
            Starts the bot's client, initializes event handlers, and prepares caches.
            </summary>
        </member>
        <member name="T:PBot.Caches.Messages">
            <summary>
            Contains the recent messages cache and its relevant methods.
            </summary>
        </member>
        <member name="P:PBot.Caches.Messages.Recent">
            <summary>
            Contains all messages in the bot's cache.
            </summary>
        </member>
        <member name="T:PBot.Caches.Members">
            <summary>
            Contains the cached members list, role list, and their relevant methods. This class possesses a static constructor not shipped in the GitHub repo for privacy reasons.
            </summary>
        </member>
        <member name="T:PBot.Caches.Members.Member">
            <summary>
            Represents a <see cref="T:NetCord.Rest.GuildUserInfo"/> object with additional bot-related fields.
            </summary>
            <param name="info">The <see cref="T:NetCord.Rest.GuildUserInfo"/> to base the object on.</param>
        </member>
        <member name="M:PBot.Caches.Members.Member.#ctor(NetCord.Rest.GuildUserInfo)">
            <summary>
            Represents a <see cref="T:NetCord.Rest.GuildUserInfo"/> object with additional bot-related fields.
            </summary>
            <param name="info">The <see cref="T:NetCord.Rest.GuildUserInfo"/> to base the object on.</param>
        </member>
        <member name="P:PBot.Caches.Members.List">
            <summary>
            The bot's internal member list, generated from the <c>members-search</c> endpoint.
            </summary>
        </member>
        <member name="F:PBot.Caches.Members.Accolades">
            <summary>
            The bot's internal list of event roles, and their appropriate descriptions.
            </summary>
        </member>
        <member name="F:PBot.Caches.Members.FounderRoles">
            <summary>
            The bot's internal list of founder roles, alongside their owners' user IDs.
            </summary>
        </member>
        <member name="F:PBot.Caches.Members.Roles">
            <summary>
            The bot's internal role list, generated with <see cref="M:NetCord.Rest.RestClient.GetGuildRolesAsync(System.UInt64,NetCord.Rest.RestRequestProperties)"/>.
            </summary>
        </member>
        <member name="M:PBot.Caches.Members.IsAccolade(System.UInt64)">
            <summary>
            Checks if the role referenced by the ID is an event role.
            </summary>
            <param name="id"> The ID to check. </param>
        </member>
        <member name="M:PBot.Caches.Members.GetUserAccolades(PBot.Caches.Members.Member)">
            <summary>
            Returns a string summarizing a user's accolades and other important roles.
            </summary>
        </member>
        <member name="M:PBot.Caches.Members.Load">
            <summary>
            Initializes the class with data from the <c>members-search</c> endpoint.
            </summary>
        </member>
        <member name="T:PBot.Extensions">
            <summary>
            Convenience class for simple type conversions.
            </summary>
        </member>
        <member name="M:PBot.Extensions.ToMessage(NetCord.Rest.InteractionMessageProperties)">
            <summary>
            Converts the value of this instance to its equivalent <see cref="T:NetCord.Rest.InteractionMessageProperties"/> representation.
            </summary>
        </member>
        <member name="M:PBot.Extensions.ToGuildUser(NetCord.User)">
            <summary>
            Converts a <see cref="T:NetCord.User"/> object to a <see cref="T:NetCord.GuildUser"/> compatible object. The values appended to the object are always set to their defaults.
            </summary>
        </member>
        <member name="M:PBot.Extensions.GetImageURLs(System.Collections.Generic.IReadOnlyDictionary{System.UInt64,NetCord.Attachment})">
            <summary>
            Converts a set of attachments to an array of the attachments' URLs.
            </summary>
        </member>
        <member name="M:PBot.Extensions.TryGetName(NetCord.TextChannel,System.String@)">
            <summary>
            Attempts to get the channel's name, returning null if it doesn't have one.
            </summary>
        </member>
        <member name="M:PBot.Extensions.ToChecked(NetCord.Rest.InteractionMessageProperties)">
            <summary>
            Caps the embed count of this instance to 10 embeds maximum.
            </summary>
        </member>
        <member name="M:PBot.Extensions.GetAvatar(NetCord.User,System.Nullable{NetCord.ImageFormat})">
            <summary>
            Gets the URL of a user's avatar if they have one, otherwise returning their default avatar URL.
            </summary>
        </member>
        <member name="M:PBot.Extensions.GetAvatar(NetCord.GuildUser,System.Nullable{NetCord.ImageFormat})">
            <summary>
            Gets the URL of a user's avatar if they have one, otherwise returning their default avatar URL.
            </summary>
        </member>
        <member name="M:PBot.Extensions.ToParsedUnicode(System.String)">
            <summary>
            Replaces any unparsed unicode identifiers with their appropriate symbols (i.e. <c>\u0041' -> 'A'</c>).
            </summary>
        </member>
        <member name="M:PBot.Extensions.ToEscapedMarkdown(System.String)">
            <summary>
            Converts the contents of this string into an escaped version, avoiding markdown formatting issues.
            </summary>
        </member>
        <member name="M:PBot.Extensions.GetMessage(System.String)">
            <summary>
            Gets the relevant <see cref="T:NetCord.Gateway.Message"/> object from a Discord message URL.
            </summary>
        </member>
        <member name="M:PBot.Extensions.GetDisplayName(NetCord.User)">
            <summary>
            Gets a <see cref="T:NetCord.User"/>'s displayed discord name using the cached member list.
            </summary>
        </member>
        <member name="T:PBot.Files">
            <summary>
            Contains methods and constants used for persistent data storage.
            </summary>
        </member>
        <member name="M:PBot.Files.FileContains(PBot.Files.Names,System.String,System.Boolean)">
            <summary>
            Whether the specified file contains the given data.
            </summary>
            <param name="file">The file to search for a match in.</param>
            <param name="data">The data to search for.</param>
            <param name="append">Whether to append the data if it isn't found.</param>
        </member>
        <member name="M:PBot.Files.ReadCounter(PBot.Files.CounterLines,System.Int32)">
            <summary>
            Reads the value of a counter.
            </summary>
            <param name="line">The counter to read the value of.</param>
            <param name="mod">The value to modify the counter by after reading.</param>
        </member>
        <member name="F:PBot.Files.MAIN">
            <summary>
            The main path containing all the memory files used by P.BOT.
            </summary>
        </member>
        <member name="T:PBot.Files.Names">
            <summary>
            A list of files used by P.BOT for storage.
            </summary>
        </member>
        <member name="F:PBot.Files.Names.Counters">
            <summary> Contains data related to basic operations, such as incremental counters. </summary>
        </member>
        <member name="F:PBot.Files.Names.Starboard">
            <summary> Contains a list of starred messages. </summary>
        </member>
        <member name="T:PBot.Files.CounterLines">
            <summary>
            A list of names for lines in the <see cref="F:PBot.Files.Names.Counters"/> file.
            </summary>
        </member>
        <member name="F:PBot.Files.Paths">
            <summary>
            The bot's internal list of file paths, indexed by their names.
            </summary>
        </member>
        <member name="T:PBot.PHelper">
            <summary>
            Contains constants and method calls related to unmanaged code in 'phlpr.dll'.
            </summary>
        </member>
        <member name="F:PBot.PHelper.CSI">
            <summary>
            Indicates the start of a virtual terminal sequence.
            </summary>
        </member>
        <member name="F:PBot.PHelper.BrightBlack">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.Black">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.BrightRed">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.Red">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.BrightGreen">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.Green">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.BrightYellow">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.Yellow">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.BrightBlue">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.Blue">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.BrightMagenta">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.Magenta">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.BrightCyan">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.Cyan">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.None">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.White">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.bBrightBlack">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.bBlack">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.bBrightRed">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.bRed">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.bBrightGreen">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.bGreen">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.bBrightYellow">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.bYellow">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.bBrightBlue">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.bBlue">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.bBrightMagenta">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.bMagenta">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.bBrightCyan">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.bCyan">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.bBrightWhite">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="F:PBot.PHelper.bWhite">
            <summary>
            Sets the console color.
            </summary>
        </member>
        <member name="M:PBot.PHelper.EnableVirtualAndHideCursor">
            <summary> Unmanaged method imported via 'phlpr.dll', enables the use of virtual terminal sequences globally, and hides the cursor. </summary>
            <returns> True if successful, otherwise returns false. </returns>
        </member>
        <member name="T:PBot.Commands.SlashCommands">
            <summary>
            Contains the slash commands used by P.BOT and their associated tasks.
            </summary>
        </member>
        <member name="M:PBot.Commands.SlashCommands.SystemsCheck">
            <summary>
            Command task. Checks if P.BOT's system is active.
            </summary>
        </member>
        <member name="M:PBot.Commands.SlashCommands.GetAvatar(NetCord.User,System.Nullable{NetCord.ImageFormat})">
            <summary>Command task. Gets the avatar of the <paramref name="user"/>, in a specific format if specified in <paramref name="format"/>.</summary>
            <param name="user">The user to pull an avatar from. Works for non-server members as well.</param>
            <param name="format">The format of the image result, the GIF and Lottie formats are only supported for animated avatars.</param>
        </member>
        <member name="M:PBot.Commands.SlashCommands.GetTitle(PBot.Commands.Helpers.Library.Titles)">
            <summary>Command task. Gets the library entry of the title specified in the <paramref name="title"/> parameter.</summary>
            <param name="title">The title to display.</param>
        </member>
        <member name="M:PBot.Commands.SlashCommands.GetUser(NetCord.User,System.Boolean)">
            <summary>Displays data relevant to a specified <paramref name="user"/>.</summary>
            <param name="user">The user to display data for.</param>
            <param name="raw">Whether the command should dump all user data as plaintext.</param>
        </member>
        <member name="M:PBot.Commands.SlashCommands.GetWiki(System.String,System.Boolean)">
            <summary>Searches for a Wikipedia page similar to the given <paramref name="searchTerm"/>, and gets its content if a page is found.</summary>
            <param name="searchTerm">The term to find a page for if possible.</param>
            <param name="longFormat">Should the full page's contents be fetched?</param>
        </member>
        <member name="M:PBot.Commands.SlashCommands.CreatePost(System.String,NetCord.Attachment,System.Boolean,NetCord.Channel,System.Boolean)">
            <summary>Creates an embed with the specified <paramref name="content"/> and <paramref name="image"/>.</summary>
            <param name="content">The text-based content of the post.</param>
            <param name="image">The image to attach to the post.</param>
            <param name="anonymous">Should the post be made anonymously?</param>
            <param name="channel">The channel to create the post in, defaults to the current channel.</param>
            <param name="draft">Should a private preview of the post be created instead?</param>
        </member>
        <member name="T:PBot.Commands.TextCommands">
            <summary>
            Contains the text commands used by P.BOT and their associated tasks.
            </summary>
        </member>
        <member name="M:PBot.Commands.TextCommands.Parse(NetCord.Gateway.Message)">
            <summary>
            Parses a given message, running the associated text command if a valid prefix is found.
            </summary>
        </member>
        <member name="T:PBot.Commands.Helpers.Library">
            <summary>
            Contains data involving dictionaries and the <see cref="M:PBot.Commands.SlashCommands.GetTitle(PBot.Commands.Helpers.Library.Titles)"/> command.
            </summary>
        </member>
        <member name="T:PBot.Commands.Helpers.Library.Titles">
            <summary>
            A list of possible choices for the <see cref="M:PBot.Commands.SlashCommands.GetTitle(PBot.Commands.Helpers.Library.Titles)"/> command.
            </summary>
        </member>
        <member name="F:PBot.Commands.Helpers.Library.Titles.WhatIs_ThePPP">
            <summary>
            The history of the PPP.
            </summary>
        </member>
        <member name="F:PBot.Commands.Helpers.Library.Titles.IcelandGuide">
            <summary>
            Angel's Iceland travel guide.
            </summary>
        </member>
        <member name="F:PBot.Commands.Helpers.Library.Entries">
            <summary>
            Contains definitions used for the <see cref="M:PBot.Commands.SlashCommands.GetTitle(PBot.Commands.Helpers.Library.Titles)"/> command.
            </summary>
        </member>
        <member name="T:PBot.Commands.Helpers.Posts">
            <summary>
            Contains methods and variables related to the post system.
            </summary>
        </member>
        <member name="T:PBot.Commands.Helpers.ProbabilityStateMachine">
            <summary>
            Contains constants, variables and the function responsible for probability calculations and roll results.
            </summary>
        </member>
        <member name="F:PBot.Commands.Helpers.ProbabilityStateMachine.ErrMessage">
            <summary>
            The message to format and print if the roll command is invalid.
            </summary>
        </member>
        <member name="F:PBot.Commands.Helpers.ProbabilityStateMachine.StndString">
            <summary>
            The message to format and append per standard roll result.
            </summary>
        </member>
        <member name="F:PBot.Commands.Helpers.ProbabilityStateMachine.CritString">
            <summary>
            The message to format and append per critical success.
            </summary>
        </member>
        <member name="F:PBot.Commands.Helpers.ProbabilityStateMachine.FailString">
            <summary>
            The message to format and append per critical failure.
            </summary>
        </member>
        <member name="M:PBot.Commands.Helpers.ProbabilityStateMachine.Run(NetCord.Gateway.Message)">
            <summary> Applies the appropriate logic to use based on the given <paramref name="message"/>. </summary>
            <param name="message"> The message to operate with. </param>
        </member>
        <member name="M:PBot.Commands.Helpers.ProbabilityStateMachine.InitXShift128">
            <summary>
            Initializes the xShift128 algorithm based off the current time in ticks.
            </summary>
        </member>
        <member name="T:PBot.Commands.Helpers.Wikipedia">
            <summary>
            Contains the Wikipedia API constant, as well as the method responsible for page retrieval.
            </summary>
        </member>
        <member name="F:PBot.Commands.Helpers.Wikipedia.WIKI_API">
            <summary>
            The URL and preset parameters for the Wikipedia content API.
            </summary>
        </member>
        <member name="M:PBot.Commands.Helpers.Wikipedia.GetPage(System.String,System.Boolean)">
            <summary>
            Sends the request responsible for retrieving the page, and formats it properly.
            </summary>
        </member>
        <member name="M:PBot.Commands.Helpers.Wikipedia.Alphanumeric">
            <remarks>
            Pattern:<br/>
            <code>[A-Z0-9]?</code><br/>
            Explanation:<br/>
            <code>
            ○ Match a character in the set [0-9A-Z] atomically, optionally.<br/>
            </code>
            </remarks>
        </member>
        <member name="T:PBot.Embeds">
            <summary>
            Contains functions for the creation of embeds and their components.
            </summary>
        </member>
        <member name="M:PBot.Embeds.CreateAuthor(System.String,System.String,System.String)">
            <summary> Creates an <see cref="T:NetCord.Rest.EmbedAuthorProperties"/> object for use in an <see cref="T:NetCord.Embed"/>. </summary>
            <param name="authorText"> The <see cref="T:System.String"/> to display, used for the <see cref="P:NetCord.Rest.EmbedAuthorProperties.Name"/> property. </param>
            <param name="iconURL"> The <see cref="T:System.String"/> containing the URL of the image to display to the left of the text, used for the <see cref="P:NetCord.Rest.EmbedAuthorProperties.IconUrl"/> property. </param>
            <param name="textURL"> The <see cref="T:System.String"/> containing the URL to set <paramref name="authorText"/> as a hyperlink towards, used for the <see cref="P:NetCord.Rest.EmbedAuthorProperties.Url"/> property.</param>
        </member>
        <member name="M:PBot.Embeds.CreateFooter(System.String,System.String)">
            <summary> Creates an <see cref="T:NetCord.Rest.EmbedAuthorProperties"/> object for use in an <see cref="T:NetCord.Embed"/>. </summary>
            <param name="footerText"> The <see cref="T:System.String"/> to display, used for the <see cref="P:NetCord.Rest.EmbedFooterProperties.Text"/> property. </param>
            <param name="iconURL"> The <see cref="T:System.String"/> containing the URL of the image to display to the left of the text, used for the <see cref="P:NetCord.Rest.EmbedFooterProperties.IconUrl"/> property. </param>
        </member>
        <member name="M:PBot.Embeds.CreateField(System.String,System.String,System.Boolean)">
            <summary> Creates an <see cref="T:NetCord.Rest.EmbedFieldProperties"/> object for use in an <see cref="T:NetCord.Embed"/>. </summary>
            <param name="name"> The <see cref="T:System.String"/> to display at the field title, used for the <see cref="P:NetCord.Rest.EmbedFieldProperties.Name"/> property. </param>
            <param name="value"> The <see cref="T:System.String"/> to display in the field, used for the <see cref="P:NetCord.Rest.EmbedFieldProperties.Value"/> property. </param>
            <param name="noInline"> Whether or not to display the field inline. </param>
        </member>
        <member name="M:PBot.Embeds.GetAssetURL(System.String)">
            <summary>
            Gets the GitHub hosted URL of the given asset.
            </summary>
            <param name="fileName"> The name of the hosted file. </param>
        </member>
        <member name="F:PBot.Embeds.ASSETS">
            <summary>
            The URL to the GitHub Assets folder.
            </summary>
        </member>
        <member name="F:PBot.Embeds.STD_COLOR">
            <summary>
            The hex code for standard embed gray.
            </summary>
        </member>
        <member name="P:PBot.Embeds.RandomColor">
            <summary>
            Generates a random 24-bit integer from the current time in ticks.
            </summary>
        </member>
        <member name="M:PBot.Embeds.Generate(NetCord.Rest.EmbedProperties,System.String[],System.String,System.Boolean)">
            <summary> Combines the specified parameters to generate an embed. </summary>
            <returns> <see cref="T:NetCord.Rest.MessageProperties"/> containing the created embed. </returns>
        </member>
        <member name="M:PBot.Embeds.ToEmbed(NetCord.Rest.RestMessage,System.String,NetCord.Rest.EmbedFooterProperties,System.String,System.String)">
            <summary> Combines the specified parameters with parameters extracted from a given <see cref="T:NetCord.Rest.RestMessage"/> to generate an embed. </summary>
            <param name="message"> The <see cref="T:NetCord.Rest.RestMessage"/> object to extract parameters from. </param>
            <param name="url"> A link to an address of a webpage. When set, the <paramref name="title"/> becomes a clickable link, directing to the URL. Additionally, embeds of the same URL are grouped. </param>
            <param name="footer"> Contains the <see cref="T:NetCord.Rest.EmbedFooterProperties"/> to be used in the embed. </param>
            <param name="title"> The text that is placed above the description, usually highlighted. Also directs to a URL if one is given in <paramref name="url"/>, has a 256 character limit. </param>
            <param name="thumbnail"> The URL of thumbnail of the embed, displayed as a medium-sized image in the top right corner of the embed. </param>
            <returns> <see cref="T:NetCord.Rest.MessageProperties"/> containing the created embed. </returns>
        </member>
        <member name="M:PBot.Embeds.Title(System.String,NetCord.Rest.EmbedFieldProperties[],System.UInt64)">
            <summary>
            Creates a <see cref="T:NetCord.Rest.MessageProperties"/> object suitable for <see cref="M:PBot.Commands.SlashCommands.GetTitle(PBot.Commands.Helpers.Library.Titles)"/>.
            </summary>
        </member>
        <member name="T:PBot.Events">
            <summary>
            Contains methods responsible for handling message events.
            </summary>
        </member>
        <member name="M:PBot.Events.GuildUserUpdate(NetCord.GuildUser)">
            <summary>
            Updates the <see cref="P:PBot.Caches.Members.List"/> dictionary when a user is added or modified.
            </summary>
        </member>
        <member name="M:PBot.Events.GuildUserRemove(NetCord.Gateway.GuildUserRemoveEventArgs)">
            <summary>
            Removes users from the Caches.Members.List dictionaryy when a member is modified.
            </summary>
        </member>
        <member name="M:PBot.Events.RoleUpdate(NetCord.Role)">
            <summary>
            Updates the <see cref="F:PBot.Caches.Members.Roles"/> dictionary when roles are created or updated.
            </summary>
        </member>
        <member name="M:PBot.Events.RoleDelete(NetCord.Gateway.RoleDeleteEventArgs)">
            <summary>
            Updates the <see cref="F:PBot.Caches.Members.Roles"/> dictionary when roles are deleted.
            </summary>
        </member>
        <member name="M:PBot.Events.MapClientHandlers">
            <summary>
            Maps the <see cref="F:PBot.Bot.Client"/>'s events to their appropriate response method.
            </summary>
        </member>
        <member name="M:PBot.Events.InteractionCreate(NetCord.Interaction)">
            <summary>
            Processes recieved interactions.
            </summary>
        </member>
        <member name="F:PBot.Events.DeletedSpamMessage">
            <summary>
            Used by <see cref="M:PBot.Messages.Functions.Filter(NetCord.Gateway.Message)"/> to pass a message to <see cref="M:PBot.Events.MessageDelete(NetCord.Gateway.MessageDeleteEventArgs)"/>, bypassing the cache.
            </summary>
        </member>
        <member name="M:PBot.Events.MessageCreate(NetCord.Gateway.Message)">
            <summary>
            Processes new messages.
            </summary>
        </member>
        <member name="M:PBot.Events.MessageDelete(NetCord.Gateway.MessageDeleteEventArgs)">
            <summary>
            Logs message deletions.
            </summary>
        </member>
        <member name="M:PBot.Events.MessageUpdate(NetCord.Gateway.IPartialMessage)">
            <summary>
            Logs message edits and updates.
            </summary>
        </member>
        <member name="M:PBot.Events.PipeToDeleteHandler(NetCord.Gateway.Message)">
            <summary>
            Sets <see cref="F:PBot.Events.DeletedSpamMessage"/> for faster access from the spam filter.
            </summary>
        </member>
        <member name="M:PBot.Events.ReactionAdded(NetCord.Gateway.MessageReactionAddEventArgs)">
            <summary>
            Logs reactions to messages.
            </summary>
        </member>
        <member name="T:PBot.Messages.Functions">
            <summary>
            Contains methods and variables used for basic message functionality and parsing.
            </summary>
        </member>
        <member name="M:PBot.Messages.Functions.AddToStarBoard(NetCord.Gateway.MessageReactionAddEventArgs)">
            <summary> Parses the contents of a given <see cref="T:NetCord.Gateway.MessageReactionAddEventArgs"/> and adds the result to the starboard. </summary>
            <param name="message"> The <see cref="T:NetCord.Gateway.MessageReactionAddEventArgs"/> containing the message to add to the starboard. </param>
        </member>
        <member name="M:PBot.Messages.Functions.ParseLinks(NetCord.Gateway.Message)">
            <summary>
            Parses a given <paramref name="message"/> to check for message links, and displays their content if possible.
            </summary>
            <param name="message"> The <see cref="T:NetCord.Gateway.Message"/> object to check for and parse links in. </param>
        </member>
        <member name="M:PBot.Messages.Functions.Filter(NetCord.Gateway.Message)">
            <summary>
            Compares a given message's attributes to other messages by the same user, and deletes it if the filter's criteria are met.
            </summary>
            <param name="message">The <see cref="T:NetCord.Gateway.Message"/> object to perform comparison on.</param>
        </member>
        <member name="T:PBot.Messages.Logging">
            <summary>
            Contains methods responsible for logging messages to the console.
            </summary>
        </member>
        <member name="F:PBot.Messages.Logging.LastAuthor">
            <summary>
            The ID of the latest logged user.
            </summary>
        </member>
        <member name="F:PBot.Messages.Logging.LOG_CHANNEL">
            <summary>
            The ID of the channel to send logs to.
            </summary>
        </member>
        <member name="M:PBot.Messages.Logging.LogNetworkMessage(NetCord.Gateway.LogMessage)">
            <summary>
            Logs messages from the system.
            </summary>
        </member>
        <member name="M:PBot.Messages.Logging.LogCreatedMessage(NetCord.Gateway.Message)">
            <summary>
            Logs new discord messages.
            </summary>
        </member>
        <member name="M:PBot.Messages.Logging.LogDeletedMessage(NetCord.Gateway.Message)">
            <summary>
            Logs deleted discord messages.
            </summary>
        </member>
        <member name="M:PBot.Messages.Logging.LogUpdatedMessage(NetCord.Gateway.Message,NetCord.Gateway.Message)">
            <summary>
            Logs edited discord messages.
            </summary>
        </member>
        <member name="M:PBot.Messages.Logging.WriteAsID(System.String,PBot.Messages.Logging.SpecialId)">
            <summary>
            Writes a message to the console using a specified <see cref="T:PBot.Messages.Logging.SpecialId"/>.
            </summary>
        </member>
        <member name="T:PBot.Messages.Logging.SpecialId">
            <summary>
            An enum of IDs used by the bot during logging.
            </summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.Alphanumeric_0">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the Alphanumeric method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Alphanumeric_0.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.Alphanumeric_0.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.Alphanumeric_0.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.Alphanumeric_0.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.Alphanumeric_0.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.Alphanumeric_0.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.Alphanumeric_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.Utilities">
            <summary>Helper methods used by generated <see cref="T:System.Text.RegularExpressions.Regex"/>-derived implementations.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout">
            <summary>Default timeout value set in <see cref="T:System.AppContext"/>, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout"/> if none was set.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout">
            <summary>Whether <see cref="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout"/> is non-infinite.</summary>
        </member>
    </members>
</doc>
